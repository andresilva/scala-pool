Index.PACKAGES = {"io" : [], "io.github" : [], "io.github.andrebeat" : [], "io.github.andrebeat.pool" : [{"name" : "io.github.andrebeat.pool.ArrayBlockingQueuePool", "shortDescription" : "A generic object pooling implementation based on java.util.concurrent.ArrayBlockingQueue.", "members_class" : [{"label" : "live", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.live", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#live():Int", "kind" : "def"}, {"label" : "capacity", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.capacity", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#capacity():Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.size", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#size():Int", "kind" : "def"}, {"label" : "handleFill", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleFill", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#handleFill():Unit", "kind" : "final def"}, {"label" : "handleDrain", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleDrain", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#handleDrain():Unit", "kind" : "final def"}, {"label" : "handleTryAcquire", "tail" : "(atMost: Duration): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleTryAcquire", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#handleTryAcquire(atMost:scala.concurrent.duration.Duration):Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "def"}, {"label" : "handleTryAcquire", "tail" : "(): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleTryAcquire", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#handleTryAcquire():Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "def"}, {"label" : "handleAcquire", "tail" : "(): Lease[A]", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleAcquire", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#handleAcquire():io.github.andrebeat.pool.Lease[A]", "kind" : "def"}, {"label" : "destroy", "tail" : "(a: A): Unit", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.destroy", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#destroy(a:A):Unit", "kind" : "def"}, {"label" : "items", "tail" : ": ArrayBlockingQueue[Item]", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.items", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#items:java.util.concurrent.ArrayBlockingQueue[ArrayBlockingQueuePool.this.Item]", "kind" : "val"}, {"label" : "Item", "tail" : "", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.Item", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#ItemextendsAnyRef", "kind" : "abstract class"}, {"member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool#<init>", "error" : "unsupported entity"}, {"label" : "referenceType", "tail" : ": ReferenceType", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.referenceType", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#referenceType:io.github.andrebeat.pool.ReferenceType", "kind" : "val"}, {"label" : "_capacity", "tail" : ": Int", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool._capacity", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#_capacity:Int", "kind" : "val"}, {"label" : "close", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.close", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#close():Unit", "kind" : "def"}, {"label" : "leased", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.Pool.leased", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#leased():Int", "kind" : "def"}, {"label" : "fill", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.fill", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#fill():Unit", "kind" : "def"}, {"label" : "drain", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.drain", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#drain():Unit", "kind" : "def"}, {"label" : "acquire", "tail" : "(): Lease[A]", "member" : "io.github.andrebeat.pool.Pool.acquire", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#acquire():io.github.andrebeat.pool.Lease[A]", "kind" : "def"}, {"label" : "tryAcquire", "tail" : "(atMost: Duration): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.Pool.tryAcquire", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#tryAcquire(atMost:scala.concurrent.duration.Duration):Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "def"}, {"label" : "tryAcquire", "tail" : "(): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.Pool.tryAcquire", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#tryAcquire():Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "def"}, {"label" : "closed", "tail" : ": AtomicBoolean", "member" : "io.github.andrebeat.pool.Pool.closed", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#closed:java.util.concurrent.atomic.AtomicBoolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "newItem", "tail" : "(a: A): Item", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.newItem", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#newItem(a:A):ArrayBlockingQueuePool.this.Item", "kind" : "abstract def"}, {"label" : "healthCheck", "tail" : "(a: A): Boolean", "member" : "io.github.andrebeat.pool.Pool.healthCheck", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#healthCheck(a:A):Boolean", "kind" : "abstract def"}, {"label" : "dispose", "tail" : "(a: A): Unit", "member" : "io.github.andrebeat.pool.Pool.dispose", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#dispose(a:A):Unit", "kind" : "abstract def"}, {"label" : "reset", "tail" : "(a: A): Unit", "member" : "io.github.andrebeat.pool.Pool.reset", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#reset(a:A):Unit", "kind" : "abstract def"}, {"label" : "factory", "tail" : "(): A", "member" : "io.github.andrebeat.pool.Pool.factory", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#factory():A", "kind" : "abstract def"}, {"label" : "handleClose", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.handleClose", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#handleClose():Unit", "kind" : "abstract def"}], "class" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html", "kind" : "class"}, {"name" : "io.github.andrebeat.pool.ExpiringPool", "shortDescription" : "An object pool that creates the objects as needed until a maximum number of objects has been created andautomatically evicts objects after they have been idle for a given amount of time.", "object" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html", "members_class" : [{"label" : "Item", "tail" : "", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.Item", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#ItemextendsAnyRef", "kind" : "abstract class"}, {"label" : "newItem", "tail" : "(a: A): ExpiringItem", "member" : "io.github.andrebeat.pool.ExpiringPool.newItem", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#newItem(a:A):ExpiringPool.this.ExpiringItem", "kind" : "def"}, {"label" : "handleClose", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.ExpiringPool.handleClose", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#handleClose():Unit", "kind" : "def"}, {"label" : "healthCheck", "tail" : "(a: A): Boolean", "member" : "io.github.andrebeat.pool.ExpiringPool.healthCheck", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#healthCheck(a:A):Boolean", "kind" : "def"}, {"label" : "reset", "tail" : "(a: A): Unit", "member" : "io.github.andrebeat.pool.ExpiringPool.reset", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#reset(a:A):Unit", "kind" : "def"}, {"label" : "dispose", "tail" : "(a: A): Unit", "member" : "io.github.andrebeat.pool.ExpiringPool.dispose", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#dispose(a:A):Unit", "kind" : "def"}, {"label" : "factory", "tail" : "(): A", "member" : "io.github.andrebeat.pool.ExpiringPool.factory", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#factory():A", "kind" : "def"}, {"label" : "ExpiringItem", "tail" : "", "member" : "io.github.andrebeat.pool.ExpiringPool.ExpiringItem", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#ExpiringItemextendsExpiringPool.this.Item", "kind" : "final class"}, {"member" : "io.github.andrebeat.pool.ExpiringPool#<init>", "error" : "unsupported entity"}, {"label" : "maxIdleTime", "tail" : ": Duration", "member" : "io.github.andrebeat.pool.ExpiringPool.maxIdleTime", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#maxIdleTime:scala.concurrent.duration.Duration", "kind" : "val"}, {"label" : "live", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.live", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#live():Int", "kind" : "def"}, {"label" : "capacity", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.capacity", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#capacity():Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.size", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#size():Int", "kind" : "def"}, {"label" : "handleFill", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleFill", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#handleFill():Unit", "kind" : "final def"}, {"label" : "handleDrain", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleDrain", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#handleDrain():Unit", "kind" : "final def"}, {"label" : "handleTryAcquire", "tail" : "(atMost: Duration): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleTryAcquire", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#handleTryAcquire(atMost:scala.concurrent.duration.Duration):Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "def"}, {"label" : "handleTryAcquire", "tail" : "(): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleTryAcquire", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#handleTryAcquire():Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "def"}, {"label" : "handleAcquire", "tail" : "(): Lease[A]", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleAcquire", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#handleAcquire():io.github.andrebeat.pool.Lease[A]", "kind" : "def"}, {"label" : "destroy", "tail" : "(a: A): Unit", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.destroy", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#destroy(a:A):Unit", "kind" : "def"}, {"label" : "items", "tail" : ": ArrayBlockingQueue[Item]", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.items", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#items:java.util.concurrent.ArrayBlockingQueue[ArrayBlockingQueuePool.this.Item]", "kind" : "val"}, {"label" : "referenceType", "tail" : ": ReferenceType", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.referenceType", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#referenceType:io.github.andrebeat.pool.ReferenceType", "kind" : "val"}, {"label" : "_capacity", "tail" : ": Int", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool._capacity", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#_capacity:Int", "kind" : "val"}, {"label" : "close", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.close", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#close():Unit", "kind" : "def"}, {"label" : "leased", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.Pool.leased", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#leased():Int", "kind" : "def"}, {"label" : "fill", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.fill", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#fill():Unit", "kind" : "def"}, {"label" : "drain", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.drain", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#drain():Unit", "kind" : "def"}, {"label" : "acquire", "tail" : "(): Lease[A]", "member" : "io.github.andrebeat.pool.Pool.acquire", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#acquire():io.github.andrebeat.pool.Lease[A]", "kind" : "def"}, {"label" : "tryAcquire", "tail" : "(atMost: Duration): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.Pool.tryAcquire", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#tryAcquire(atMost:scala.concurrent.duration.Duration):Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "def"}, {"label" : "tryAcquire", "tail" : "(): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.Pool.tryAcquire", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#tryAcquire():Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "def"}, {"label" : "closed", "tail" : ": AtomicBoolean", "member" : "io.github.andrebeat.pool.Pool.closed", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#closed:java.util.concurrent.atomic.AtomicBoolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(capacity: Int, referenceType: ReferenceType, maxIdleTime: Duration, factory: () => A, reset: (A) => Unit, dispose: (A) => Unit, healthCheck: (A) => Boolean): ExpiringPool[A]", "member" : "io.github.andrebeat.pool.ExpiringPool.apply", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#apply[A<:AnyRef](capacity:Int,referenceType:io.github.andrebeat.pool.ReferenceType,maxIdleTime:scala.concurrent.duration.Duration,factory:()=>A,reset:A=>Unit,dispose:A=>Unit,healthCheck:A=>Boolean):io.github.andrebeat.pool.ExpiringPool[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/andrebeat\/pool\/ExpiringPool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/andrebeat\/pool\/ExpiringPool.html", "kind" : "class"}, {"name" : "io.github.andrebeat.pool.Lease", "trait" : "io\/github\/andrebeat\/pool\/Lease.html", "kind" : "trait", "members_trait" : [{"label" : "use", "tail" : "(f: (A) => B): B", "member" : "io.github.andrebeat.pool.Lease.use", "link" : "io\/github\/andrebeat\/pool\/Lease.html#use[B](f:A=>B):B", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (A) => B): B", "member" : "io.github.andrebeat.pool.Lease.apply", "link" : "io\/github\/andrebeat\/pool\/Lease.html#apply[B](f:A=>B):B", "kind" : "def"}, {"label" : "invalidate", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Lease.invalidate", "link" : "io\/github\/andrebeat\/pool\/Lease.html#invalidate():Unit", "kind" : "def"}, {"label" : "release", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Lease.release", "link" : "io\/github\/andrebeat\/pool\/Lease.html#release():Unit", "kind" : "def"}, {"label" : "get", "tail" : "(): A", "member" : "io.github.andrebeat.pool.Lease.get", "link" : "io\/github\/andrebeat\/pool\/Lease.html#get():A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/andrebeat\/pool\/Lease.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/andrebeat\/pool\/Lease.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/andrebeat\/pool\/Lease.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/andrebeat\/pool\/Lease.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/andrebeat\/pool\/Lease.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/andrebeat\/pool\/Lease.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/andrebeat\/pool\/Lease.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/Lease.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/Lease.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/Lease.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/andrebeat\/pool\/Lease.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/andrebeat\/pool\/Lease.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/andrebeat\/pool\/Lease.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/andrebeat\/pool\/Lease.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/andrebeat\/pool\/Lease.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/andrebeat\/pool\/Lease.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/andrebeat\/pool\/Lease.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/andrebeat\/pool\/Lease.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/andrebeat\/pool\/Lease.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "handleInvalidate", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Lease.handleInvalidate", "link" : "io\/github\/andrebeat\/pool\/Lease.html#handleInvalidate():Unit", "kind" : "abstract def"}, {"label" : "handleRelease", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Lease.handleRelease", "link" : "io\/github\/andrebeat\/pool\/Lease.html#handleRelease():Unit", "kind" : "abstract def"}, {"label" : "a", "tail" : "(): A", "member" : "io.github.andrebeat.pool.Lease.a", "link" : "io\/github\/andrebeat\/pool\/Lease.html#a:A", "kind" : "abstract def"}], "shortDescription" : "A lease on an object requested from a io.github.andrebeat.pool.Pool allowing the object to be accessed and thenreleased back to the pool when no longer needed."}, {"name" : "io.github.andrebeat.pool.Pool", "object" : "io\/github\/andrebeat\/pool\/Pool$.html", "members_object" : [{"label" : "apply", "tail" : "(capacity: Int, factory: () => A, referenceType: ReferenceType, maxIdleTime: Duration, reset: (A) => Unit, dispose: (A) => Unit, healthCheck: (A) => Boolean): Pool[A]", "member" : "io.github.andrebeat.pool.Pool.apply", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#apply[A<:AnyRef](capacity:Int,factory:()=>A,referenceType:io.github.andrebeat.pool.ReferenceType,maxIdleTime:scala.concurrent.duration.Duration,reset:A=>Unit,dispose:A=>Unit,healthCheck:A=>Boolean):io.github.andrebeat.pool.Pool[A]", "kind" : "def"}, {"label" : "ClosedPoolException", "tail" : "", "member" : "io.github.andrebeat.pool.Pool.ClosedPoolException", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#ClosedPoolExceptionextendsException", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/andrebeat\/pool\/Pool$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/andrebeat\/pool\/Pool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/github\/andrebeat\/pool\/Pool.html", "kind" : "trait", "members_trait" : [{"label" : "close", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.close", "link" : "io\/github\/andrebeat\/pool\/Pool.html#close():Unit", "kind" : "def"}, {"label" : "leased", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.Pool.leased", "link" : "io\/github\/andrebeat\/pool\/Pool.html#leased():Int", "kind" : "def"}, {"label" : "fill", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.fill", "link" : "io\/github\/andrebeat\/pool\/Pool.html#fill():Unit", "kind" : "def"}, {"label" : "drain", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.drain", "link" : "io\/github\/andrebeat\/pool\/Pool.html#drain():Unit", "kind" : "def"}, {"label" : "acquire", "tail" : "(): Lease[A]", "member" : "io.github.andrebeat.pool.Pool.acquire", "link" : "io\/github\/andrebeat\/pool\/Pool.html#acquire():io.github.andrebeat.pool.Lease[A]", "kind" : "def"}, {"label" : "tryAcquire", "tail" : "(atMost: Duration): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.Pool.tryAcquire", "link" : "io\/github\/andrebeat\/pool\/Pool.html#tryAcquire(atMost:scala.concurrent.duration.Duration):Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "def"}, {"label" : "tryAcquire", "tail" : "(): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.Pool.tryAcquire", "link" : "io\/github\/andrebeat\/pool\/Pool.html#tryAcquire():Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "def"}, {"label" : "closed", "tail" : ": AtomicBoolean", "member" : "io.github.andrebeat.pool.Pool.closed", "link" : "io\/github\/andrebeat\/pool\/Pool.html#closed:java.util.concurrent.atomic.AtomicBoolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/andrebeat\/pool\/Pool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/andrebeat\/pool\/Pool.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/andrebeat\/pool\/Pool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/andrebeat\/pool\/Pool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/andrebeat\/pool\/Pool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/andrebeat\/pool\/Pool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/andrebeat\/pool\/Pool.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/Pool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/Pool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/Pool.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/andrebeat\/pool\/Pool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/andrebeat\/pool\/Pool.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/andrebeat\/pool\/Pool.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/andrebeat\/pool\/Pool.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/andrebeat\/pool\/Pool.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/andrebeat\/pool\/Pool.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/andrebeat\/pool\/Pool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/andrebeat\/pool\/Pool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/andrebeat\/pool\/Pool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "live", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.Pool.live", "link" : "io\/github\/andrebeat\/pool\/Pool.html#live():Int", "kind" : "abstract def"}, {"label" : "capacity", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.Pool.capacity", "link" : "io\/github\/andrebeat\/pool\/Pool.html#capacity():Int", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.Pool.size", "link" : "io\/github\/andrebeat\/pool\/Pool.html#size():Int", "kind" : "abstract def"}, {"label" : "referenceType", "tail" : "(): ReferenceType", "member" : "io.github.andrebeat.pool.Pool.referenceType", "link" : "io\/github\/andrebeat\/pool\/Pool.html#referenceType:io.github.andrebeat.pool.ReferenceType", "kind" : "abstract def"}, {"label" : "healthCheck", "tail" : "(a: A): Boolean", "member" : "io.github.andrebeat.pool.Pool.healthCheck", "link" : "io\/github\/andrebeat\/pool\/Pool.html#healthCheck(a:A):Boolean", "kind" : "abstract def"}, {"label" : "dispose", "tail" : "(a: A): Unit", "member" : "io.github.andrebeat.pool.Pool.dispose", "link" : "io\/github\/andrebeat\/pool\/Pool.html#dispose(a:A):Unit", "kind" : "abstract def"}, {"label" : "reset", "tail" : "(a: A): Unit", "member" : "io.github.andrebeat.pool.Pool.reset", "link" : "io\/github\/andrebeat\/pool\/Pool.html#reset(a:A):Unit", "kind" : "abstract def"}, {"label" : "factory", "tail" : "(): A", "member" : "io.github.andrebeat.pool.Pool.factory", "link" : "io\/github\/andrebeat\/pool\/Pool.html#factory():A", "kind" : "abstract def"}, {"label" : "handleClose", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.handleClose", "link" : "io\/github\/andrebeat\/pool\/Pool.html#handleClose():Unit", "kind" : "abstract def"}, {"label" : "handleFill", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.handleFill", "link" : "io\/github\/andrebeat\/pool\/Pool.html#handleFill():Unit", "kind" : "abstract def"}, {"label" : "handleDrain", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.handleDrain", "link" : "io\/github\/andrebeat\/pool\/Pool.html#handleDrain():Unit", "kind" : "abstract def"}, {"label" : "handleAcquire", "tail" : "(): Lease[A]", "member" : "io.github.andrebeat.pool.Pool.handleAcquire", "link" : "io\/github\/andrebeat\/pool\/Pool.html#handleAcquire():io.github.andrebeat.pool.Lease[A]", "kind" : "abstract def"}, {"label" : "handleTryAcquire", "tail" : "(atMost: Duration): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.Pool.handleTryAcquire", "link" : "io\/github\/andrebeat\/pool\/Pool.html#handleTryAcquire(atMost:scala.concurrent.duration.Duration):Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "abstract def"}, {"label" : "handleTryAcquire", "tail" : "(): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.Pool.handleTryAcquire", "link" : "io\/github\/andrebeat\/pool\/Pool.html#handleTryAcquire():Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "abstract def"}], "shortDescription" : "A pool of objects that may be leased."}, {"name" : "io.github.andrebeat.pool.ReferenceType", "object" : "io\/github\/andrebeat\/pool\/ReferenceType$.html", "members_object" : [{"label" : "Weak", "tail" : "", "member" : "io.github.andrebeat.pool.ReferenceType.Weak", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#Weak", "kind" : "case object"}, {"label" : "Soft", "tail" : "", "member" : "io.github.andrebeat.pool.ReferenceType.Soft", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#Soft", "kind" : "case object"}, {"label" : "Strong", "tail" : "", "member" : "io.github.andrebeat.pool.ReferenceType.Strong", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#Strong", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/andrebeat\/pool\/ReferenceType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/github\/andrebeat\/pool\/ReferenceType.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/andrebeat\/pool\/ReferenceType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "An enum-type for Java reference types."}, {"name" : "io.github.andrebeat.pool.SimplePool", "shortDescription" : "A simple object pool that creates the objects as needed until a maximum number of objects has been created.", "object" : "io\/github\/andrebeat\/pool\/SimplePool$.html", "members_class" : [{"label" : "Item", "tail" : "", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.Item", "link" : "io\/github\/andrebeat\/pool\/ArrayBlockingQueuePool.html#ItemextendsAnyRef", "kind" : "abstract class"}, {"label" : "newItem", "tail" : "(a: A): Item", "member" : "io.github.andrebeat.pool.SimplePool.newItem", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#newItem(a:A):SimplePool.this.Item", "kind" : "def"}, {"label" : "handleClose", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.SimplePool.handleClose", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#handleClose():Unit", "kind" : "def"}, {"label" : "SimpleItem", "tail" : "", "member" : "io.github.andrebeat.pool.SimplePool.SimpleItem", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#SimpleItemextendsSimplePool.this.Item", "kind" : "final class"}, {"label" : "healthCheck", "tail" : "(a: A): Boolean", "member" : "io.github.andrebeat.pool.SimplePool.healthCheck", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#healthCheck(a:A):Boolean", "kind" : "def"}, {"label" : "reset", "tail" : "(a: A): Unit", "member" : "io.github.andrebeat.pool.SimplePool.reset", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#reset(a:A):Unit", "kind" : "def"}, {"label" : "dispose", "tail" : "(a: A): Unit", "member" : "io.github.andrebeat.pool.SimplePool.dispose", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#dispose(a:A):Unit", "kind" : "def"}, {"label" : "factory", "tail" : "(): A", "member" : "io.github.andrebeat.pool.SimplePool.factory", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#factory():A", "kind" : "def"}, {"member" : "io.github.andrebeat.pool.SimplePool#<init>", "error" : "unsupported entity"}, {"label" : "live", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.live", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#live():Int", "kind" : "def"}, {"label" : "capacity", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.capacity", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#capacity():Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.size", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#size():Int", "kind" : "def"}, {"label" : "handleFill", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleFill", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#handleFill():Unit", "kind" : "final def"}, {"label" : "handleDrain", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleDrain", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#handleDrain():Unit", "kind" : "final def"}, {"label" : "handleTryAcquire", "tail" : "(atMost: Duration): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleTryAcquire", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#handleTryAcquire(atMost:scala.concurrent.duration.Duration):Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "def"}, {"label" : "handleTryAcquire", "tail" : "(): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleTryAcquire", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#handleTryAcquire():Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "def"}, {"label" : "handleAcquire", "tail" : "(): Lease[A]", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.handleAcquire", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#handleAcquire():io.github.andrebeat.pool.Lease[A]", "kind" : "def"}, {"label" : "destroy", "tail" : "(a: A): Unit", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.destroy", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#destroy(a:A):Unit", "kind" : "def"}, {"label" : "items", "tail" : ": ArrayBlockingQueue[Item]", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.items", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#items:java.util.concurrent.ArrayBlockingQueue[ArrayBlockingQueuePool.this.Item]", "kind" : "val"}, {"label" : "referenceType", "tail" : ": ReferenceType", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool.referenceType", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#referenceType:io.github.andrebeat.pool.ReferenceType", "kind" : "val"}, {"label" : "_capacity", "tail" : ": Int", "member" : "io.github.andrebeat.pool.ArrayBlockingQueuePool._capacity", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#_capacity:Int", "kind" : "val"}, {"label" : "close", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.close", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#close():Unit", "kind" : "def"}, {"label" : "leased", "tail" : "(): Int", "member" : "io.github.andrebeat.pool.Pool.leased", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#leased():Int", "kind" : "def"}, {"label" : "fill", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.fill", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#fill():Unit", "kind" : "def"}, {"label" : "drain", "tail" : "(): Unit", "member" : "io.github.andrebeat.pool.Pool.drain", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#drain():Unit", "kind" : "def"}, {"label" : "acquire", "tail" : "(): Lease[A]", "member" : "io.github.andrebeat.pool.Pool.acquire", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#acquire():io.github.andrebeat.pool.Lease[A]", "kind" : "def"}, {"label" : "tryAcquire", "tail" : "(atMost: Duration): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.Pool.tryAcquire", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#tryAcquire(atMost:scala.concurrent.duration.Duration):Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "def"}, {"label" : "tryAcquire", "tail" : "(): Option[Lease[A]]", "member" : "io.github.andrebeat.pool.Pool.tryAcquire", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#tryAcquire():Option[io.github.andrebeat.pool.Lease[A]]", "kind" : "def"}, {"label" : "closed", "tail" : ": AtomicBoolean", "member" : "io.github.andrebeat.pool.Pool.closed", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#closed:java.util.concurrent.atomic.AtomicBoolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/andrebeat\/pool\/SimplePool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(capacity: Int, referenceType: ReferenceType, factory: () => A, reset: (A) => Unit, dispose: (A) => Unit, healthCheck: (A) => Boolean): SimplePool[A]", "member" : "io.github.andrebeat.pool.SimplePool.apply", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#apply[A<:AnyRef](capacity:Int,referenceType:io.github.andrebeat.pool.ReferenceType,factory:()=>A,reset:A=>Unit,dispose:A=>Unit,healthCheck:A=>Boolean):io.github.andrebeat.pool.SimplePool[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/andrebeat\/pool\/SimplePool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/andrebeat\/pool\/SimplePool.html", "kind" : "class"}]};